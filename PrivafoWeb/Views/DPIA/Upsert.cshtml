@model Privafo.Models.ViewModels.DPIAVM
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager


<form method="post" asp-action="Upsert" enctype="multipart/form-data">
		<input asp-for="DPIATemplate.ID" hidden />
        <input asp-for="DPIATemplate.CreatedBy" value="@UserManager.GetUserId(User)" hidden />
			<div class="row">
						<div class="col-12">            
							<div class="col-12 pb-2">
								<h5 class="text-primary">@(Model.DPIATemplate.ID!=0?"Update": "Create") Template</h5>
							</div>   
						</div>
						<div class="demo-section">
							@(Html.Kendo().TabStrip()
								  .Name("tabstrip")
								  .Events(events => events
										.Select("onSelect")
										)
								  .Animation(animation => 
									  animation.Open(effect => 
										  effect.Fade(FadeDirection.In)))
								  .Items(tabstrip =>
								  {
									  tabstrip.Add().Text("Design")
										  .Selected(true)
										  .Content(@<text>
																							@* ---Content Design---*@
																										<div class="col-12">
																											@(Html.Kendo().ToolBar()
															.Name("ToolBar")
															.Items(items =>
															{
																items.Add().Template("<button class='btn btn btn-light btn-sm' type='button' onclick='TampilModalSection();' data-bs-toggle='modal' data-bs-target='#sectionModal'><i class='bx bx-add-to-queue'></i>Add Section</button>");
																items.Add().Type(CommandType.Separator);
																items.Add().Template("<button class='btn btn btn-light btn-sm' type='submit' onclick='save_template();'><i class='bx bx-save'></i>Save</button>");
																items.Add().Type(CommandType.Separator);
																items.Add().Template("<button class='btn btn btn-light btn-sm' type='button' onclick='RefreshTodo()'><i class='bx bx-refresh'></i>Refresh</button>");
																items.Add().Type(CommandType.Separator);
																																								@*items.Add().Template("<button class='btn btn btn-light btn-sm' type='button' onclick='print_pdf(false);'><i class='bx bx-printer'></i>Print</button>");*@
																items.Add().Template("<button class='btn btn btn-light btn-sm' type='button' onclick='preview_pdf();'><i class='bx bx-search'></i>Preview</button>");
																@*items.Add().Type(CommandType.Separator);
																items.Add().Template("<button class='btn btn btn-light btn-sm' type='button' onclick='send_email();'><i class='bx bx-email'></i>Email</button>");
																items.Add().Type(CommandType.Separator);*@
																items.Add().Type(CommandType.Button).Text("Action").Overflow(ShowInOverflowPopup.Always);
																items.Add().Type(CommandType.Button).Text("Another Action").Overflow(ShowInOverflowPopup.Always);
																items.Add().Type(CommandType.Button).Text("Something else here").Overflow(ShowInOverflowPopup.Always);
															})
																										)
																										</div>
																										<div class="accordion" id="accordionHeader">
																									<div class="accordion-item">
																										<h2 class="accordion-header" id="headingOneHeader">
																											<button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
																												<strong>Header</strong>
																											</button>
																										</h2>

																										<div id="collapseOne" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#accordionHeader">
																											<div class="accordion-body">	
																													<div class="mb-3">
																														<label asp-for="DPIATemplate.TemplateName">Template Name</label>
																														<input id="tmpname" asp-for="DPIATemplate.TemplateName" class="form-control" />
																														<span asp-validation-for="DPIATemplate.TemplateName" class=text-danger></span>
																													</div>
																													<div class="mb-3">
																														<label asp-for="DPIATemplate.Description"></label>
																														<textarea id="tmpdesc" asp-for="DPIATemplate.Description" class="form-control" rows=3></textarea>
																														<span class=text-danger></span>
																													</div>
																													<div class="mb-3">
																														<label asp-for="DPIATemplate.Icon" hidden></label>
																														<textarea asp-for="DPIATemplate.Icon" rows=3 class="form-control" hidden></textarea>                    
																													</div>
																														<div class="mb-3">
																														<label asp-for="DPIATemplate.Welcome"></label>
																														<textarea id="welcome" asp-for="DPIATemplate.Welcome" class="form-control" rows=3></textarea>
																														<span class=text-danger></span>
																													</div>  
																				
																														<div class="mb-3">
																														<label asp-for="DPIATemplate.QuestionJSON">JSON</label>
																														<textarea id="questionjson" asp-for="DPIATemplate.QuestionJSON" class="form-control" rows=3></textarea>
																														<span class=text-danger></span>
																														</div> 
																														<div class="mb-3">
																														<label id="labelJSON">Total Character : 0</label>
																														</div> 
																													</div>
																											</div>
																										</div>
																									</div>	
																										<div class="form-row mt-3">
																												<div class="col-12">
																													<div id="todo-container"></div>
																												</div>
																									</div> 
																						 	@*---End Content Design---*@
																					  	</text>);
									  tabstrip.Add().Text("Preview")
										  .Content(@<text>
																						 	@* ---Content Design---*@
																								<script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.2.2/pdf.js"></script>
																					<script>
																						window.pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.2.2/pdf.worker.js';
																					</script>

																					<div id="pdfviewer">
																						@(Html.Kendo().PDFViewer().Name("pdfviewer")
														.PdfjsProcessing(pdf => pdf.File(Url.Content("~/tmp/dpia/") + "blank.pdf"))
														.Height(500)
																						)
																					</div>

																					<style>
																						html body #pdfviewer {
																							width: 100% !important;
																						}
																					</style>														

						
																						 	@*---End Content Design---*@
																					  	</text>);             
								  })
							)
						</div>
		</div>  

                    

			

			<div class="modal fade" id="sectionModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
				<div class="modal-dialog modal-dialog-centered">
					<div class="modal-content">
						<div class="modal-header">
							<h5 class="modal-title" id="exampleModalLabel">Add New Section</h5>
							<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
						</div>
						<div class="modal-body">
							<div class="row">
							<div class="col-12"> 
								<div class="mb-3">
									<label>Section Name</label>
								</div>
								<div class="mb-3">
									<input id="todo-input" type="text" class="form-control" required>
								</div>
							</div>
							</div>
						</div>
						<div class="modal-footer">
							<button type="button" class="btn btn-primary" onclick="CreateTodo();">Add</button> 
							<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
						</div>
					</div>
				</div>
			</div>

			<div class="modal fade" id="mainModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
				<div class="modal-dialog modal-dialog-centered">
					<div class="modal-content">
						<div class="modal-header">
							<h5 class="modal-title" id="mainModalLabel">Question</h5>
							<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
						</div>
					<div class="modal-body">
						<input asp-for="DPIATemplate.ID" hidden />
						<input asp-for="DPIATemplate.CreatedBy" value="@UserManager.(User)" hidden />
					<div class="row">
					<div class="col-12">   
								<input id="update_mode" hidden/>						
								<input id="section_id" hidden/>
								<span id="section" hidden></span>					
							<div class="mb-3">
								<label>Question</label>
								<textarea id="idquestion" class="form-control" rows=2 required></textarea>
							</div>
							<div class="mb-3">
								<label>Friendly Name</label>
								<input class="form-control" id="idfriendly" />
							</div>
							 <div class="mb-3">
								<label>Description</label>
								<textarea class="form-control" rows=2 id="iddescription"></textarea>
							</div>  
							<div class="mb-3">
										<label class="form-label">Type</label>
										<select class="single-select" id="idtype" onchange="showChoice();">
											<option value="tx">Text</option>
											<option value="mc">Multi Choice</option>
											<option value="yn">Yes / No</option>									
											<option value="dt">Date</option>
											<option value="st">Statement</option>
											<option value="in">Inventory</option>
											<option value="pd">Personal Data</option>
											<option value="ac">Access Control</option>
										</select>
							</div>
							<div class="mb-3 bg-light" id="idmultichoice" style="display: none;">
									<table class="table table-borderless">
										<tr><td>A</td><td></td><td><input class="form-control" id="idA" /></td></tr>
										<tr><td>B</td><td></td><td><input class="form-control" id="idB" /></td></tr>
										<tr><td>C</td><td></td><td><input class="form-control" id="idC" /></td></tr>
										<tr><td>D</td><td></td><td><input class="form-control" id="idD" /></td></tr>
										<tr><td>E</td><td></td><td><input class="form-control" id="idE" /></td></tr>
									</table>
							</div>
					</div>
						<div class="mb-3">
							<table style="vertical-align:top; width:100%">
								<tr>
									<td>
                                				<label class="form-label">Question Configuration</label>
												<div class="form-check form-switch">
													<input class="form-check-input" type="checkbox" id="idanswereq" checked>
													<label class="form-check-label" for="flexSwitchCheckChecked">Answer Required</label>
												</div>
												<div class="form-check form-switch">
													<input class="form-check-input" type="checkbox" id="idattachreq">
													<label class="form-check-label" for="flexSwitchCheckChecked">Attachment Required</label>
												</div>
												<div class="form-check form-switch">
													<input class="form-check-input" type="checkbox" id="idquesthint">
													<label class="form-check-label" for="flexSwitchCheckChecked">Question Hint</label>
												</div>
									</td>
									<td></td>
									<td>
                                				<label class="form-label">Response Configuration</label>
												<div class="form-check form-switch">
													<input class="form-check-input" type="checkbox" id="idnotsure">
													<label class="form-check-label" for="flexSwitchCheckChecked">Allow Not Sure</label>
												</div>
												<div class="form-check form-switch">
													<input class="form-check-input" type="checkbox" id="idna">
													<label class="form-check-label" for="flexSwitchCheckChecked">Allow Not Applicable</label>
												</div>
												<div class="form-check form-switch">									        
												</div>
									</td>
								</tr>
							</table>
						</div>
						<div class="mb-3">
							<label for="formFileMultiple" class="form-label">Upload Attachment (Max 256 MB)</label>
							<input class="form-control" type="file" id="idfileurl" multiple>
						</div>
					</div>
					</div>
					  <div class="modal-footer">
						<button type="button" id="btnupdatequestion" class="btn btn-primary" onclick="productUpdate();">Apply</button> 
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
					  </div>
					</div>
				</div>
			</div>

			<div id="confirmModal" class="modal fade" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
				<div class="modal-dialog modal-confirm">
					<div class="modal-content">
						<div class="modal-header flex-column">
							<h5 class="modal-title" id="exampleModalLabel">Delete Confirmation</h5>
						</div>
						<div class="modal-body">
							<span id="button_triger_id" hidden></span>
							<p>Do you really want to delete these records? This process cannot be undone.</p>
						</div>
						<div class="modal-footer justify-content-center">
							<button type="button" class="btn btn-primary" onclick="ConfirmDelete();" data-bs-dismiss="modal">Confirm</button> 
							<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
						</div>
					</div>
				</div>
			</div>

</form>




@*Validate in Client Side*@
@section Scripts{
    @{
																<partial name="_ValidationScriptsPartial"></partial>
    }
}

	<script src="~/theme/js/app.js"></script>
	<script src="~/js/jspdf.min.js"></script>
	<script>

		function TampilModalSection(param)
		{
			//$("#sectionModal").modal("show");
			document.getElementById("todo-input").value = '';
		}
		function TampilModal(param)
		{
			var paramid = param.id;
			document.getElementById("update_mode").value = "add";
			document.getElementById("section_id").value = paramid;
			document.getElementById("section").innerHTML = "Section : " + document.getElementById(paramid + "_SecName").value;
		    document.getElementById("mainModalLabel").innerHTML = "Add New Question";
			formClear();
			document.getElementById("btnupdatequestion").style.display = "block";
		}

		function TampilModalEdit(secid,questid)
		{
			document.getElementById("section_id").value = secid;
			document.getElementById("update_mode").value = "edit";
			document.getElementById("mainModalLabel").innerHTML = "Question Info";
			document.getElementById("btnupdatequestion").style.display = "none";
			for (var i = 0; i < todos.length; i++) {
				if (i==secid)
				{
						for (var j = 0; j < todos[i].quest.length; j++)
						{
							if (j==questid){
									$("#idquestion").val(todos[i].quest[j].question);
									$("#idfriendly").val(todos[i].quest[j].friendly);
									$("#iddescription").val(todos[i].quest[j].description);
									$("#idtype").val(todos[i].quest[j].type);
									showChoice(); 
									$("#idA").val(todos[i].quest[j].a);
									$("#idB").val(todos[i].quest[j].b);
									$("#idC").val(todos[i].quest[j].c);
									$("#idD").val(todos[i].quest[j].d);
									$("#idE").val(todos[i].quest[j].e);
									document.getElementById("idanswereq").checked = todos[i].quest[j].answereq;
									document.getElementById("idattachreq").checked = todos[i].quest[j].attachreq;
									document.getElementById("idquesthint").checked = todos[i].quest[j].questhint;
									document.getElementById("idnotsure").checked = todos[i].quest[j].notsure;
									document.getElementById("idna").checked = todos[i].quest[j].na;								
								break
							}					
						}
				}		
			}
		}

		function TampilModalConfirm(param)
		{
			var paramid = param.id;
			document.getElementById("button_triger_id").innerHTML = paramid;
		}

		function ConfirmDelete()
		{
			var paramid = document.getElementById("button_triger_id").innerHTML;
			DeleteTodo(document.getElementById(paramid));
		}

		// to do list 
		 var todos;
		 //alert(document.getElementById("questionjson").value);
		 var oldtodos = document.getElementById("questionjson").value;
		 if (oldtodos != "")
		 {
			//todos = JSON.parse(oldtodos);
		 }else{
			todos = [{
			text: "",
			quest:[{id:0,question:"",friendly:"",description:"",type:"",a:"",b:"",c:"",d:"",e:"",answereq:false,attachreq:false,questhint:false,notsure:false,na:false,fileurl:""}],
			done: false,
			id: 0
			}];


		 }
				var currentTodo = {
					text: "",
					quest:[{id:0,question:"",friendly:"",description:"",type:"",a:"",b:"",c:"",d:"",e:"",answereq:false,attachreq:false,questhint:false,notsure:false,na:false,fileurl:""}],
					done: false,
					id: 0
				}
			document.getElementById("todo-input").oninput = function (e) {
				currentTodo.text = e.target.value;
			};


		function DrawTodo(todo) {
			var newTodoHTML = `
			<div class="pb-3 todo-item" todo-id="${todo.id}">
						<div class="input-group">					
							<div class="input-group-text">
								<label>Section #${todo.id}</label>							
							</div>
							<input type="text" id="${todo.id}_SecName" class="form-control ${todo.done&&" todo-done"} " aria-label="Text input with checkbox" value="${todo.text}" readonly>
							<button class="btn btn btn-outline-primary btn-sm" id="${todo.id}"  data-activecontainer="${todo.id}_quest" type="button" data-bs-toggle="modal" onclick="TampilModal(this);" data-bs-target="#mainModal">Add Question</button>
							<button todo-id="${todo.id}" class="btn btn-outline-secondary bg-danger text-white" type="button" data-bs-toggle="modal" data-bs-target="#confirmModal" id="${todo.id}_button-addon2" onclick="TampilModalConfirm(this);">X</button>
							<div id="${todo.id}_container" class="container">
			  						 <div class="row">
											<div>
											<br>
												<h6>Question List</h6>
											</div>
									 </div>
									 <div class="row">
										<div class="col-sm-12">
											<table id="${todo.id}_productTable" class="table table-borderedless">
												<thead>
													<tr>
														<th>ID</th>
														<th>Question</th>
														<th>Friendly</th>
														<th></th>
													</tr>
												</thead>
											</table>
										</div>
									</div>
							</div>								
						</div>
			</div>

			  `;

			var dummy = document.createElement("DIV");
			if (todo.id == 0)
			{
				newTodoHTML = `
				<div class="pb-3 todo-item" todo-id="${todo.id}">
				</div>
				`;
			}
			dummy.innerHTML = newTodoHTML;
			document.getElementById("todo-container").appendChild(dummy.children[0]);
		}

		function RenderAllTodos() {
			var container = document.getElementById("todo-container");
			while (container.firstChild) {
				container.removeChild(container.firstChild);
			}

			for (var i = 0; i < todos.length; i++) {
				DrawTodo(todos[i]);
				for (var j = 0; j < todos[i].quest.length; j++)
				{
					if (j>0){
						addRowTable(i,j)
					}					
				}				
			}
		}


		RenderAllTodos();

		

		function DeleteTodo(button) {
			var deleteID = parseInt(button.getAttribute("todo-id"));

			for (let i = 0; i < todos.length; i++) {
				if (todos[i].id === deleteID) {
					todos.splice(i, 1);
					RenderAllTodos();
					break;
				}
			}
		}

		function TodoChecked(id) {
			todos[id].done = !todos[id].done;
			RenderAllTodos();
		}

		function CreateTodo() {
			$("#sectionModal").modal("hide");
			if (currentTodo.text.trim().length == 0)
			{
			 return;
			}
			newtodo = {
				text: currentTodo.text,
				quest:[{id:0,question:"",friendly:"",type:"",a:"",b:"",c:"",d:"",e:"",answereq:false,attachreq:false,questhint:false,notsure:false,na:false,fileurl:""}],
				done: false,
				id: todos.length
			}
			todos.push(newtodo);
			currentTodo.text = '';
			RenderAllTodos();
		}

		function RefreshTodo()
		{
			var oldtodos = document.getElementById("questionjson").value;
			if (oldtodos != "")
				{
					todos = JSON.parse(oldtodos);
				}
				RenderAllTodos();
		}
	</script>




<script>


    function productUpdate() 
	{
		$("#mainModal").modal("hide");
			if ($("#idquestion").val() != null && $("#idquestion").val() != '') 
			{
				productAddToTable();
				formClear();
				$("#question").focus();
			}
	}

	function productAddToTable() 
	{
		var idx = document.getElementById("section_id").value;
		var secid = parseInt(idx);
		var questid = todos[secid].quest.length;

		newQuest = {
			id: todos[secid].quest.length -1,
			question: $("#idquestion").val(),
			friendly: $("#idfriendly").val(),
			description: $("#iddescription").val(),
			type: $("#idtype").val(),
			a: $("#idA").val(),
			b: $("#idB").val(),
			c: $("#idC").val(),
			d: $("#idD").val(),
			e: $("#idE").val(),
			answereq: document.getElementById("idanswereq").checked,
			attachreq: document.getElementById("idattachreq").checked,
			idquesthint: document.getElementById("idquesthint").checked,
			notsure: document.getElementById("idnotsure").checked,
			na: document.getElementById("idna").checked
			//e: $("#idfileurl").val()
		}
		todos[secid].quest.push(newQuest);
		addRowTable(idx,questid);
	}

	function addRowTable(idx,questid)
	{
		if ($("#" + idx + "_productTable" + " tbody").length == 0) 
		{
			$("#" + idx + "_productTable" + "").append("<tbody></tbody>");
		}

		$("#" + idx + "_productTable" + " tbody").append("<tr>" +
        "<td>" + idx + "." + questid + "</td>" +
        "<td>" + todos[idx].quest[questid].question + "</td>" +
        "<td>" + todos[idx].quest[questid].friendly + "</td>" +
        "<td><button type='button' class='btn btn-basic btn-sm' data-bs-toggle='modal' onclick='TampilModalEdit(" + idx + "," + questid + ");' data-bs-target='#mainModal'><i class='bx bx-message-square-edit me-0'></i></button></td>" +
        "</tr>");
		if (todos[idx].quest[questid].type=="mc")
		{
			 if (todos[idx].quest[questid].a != "")
			 {
				$("#" + idx + "_productTable" + " tbody").append("<tr>" +
				"<td></td><td>A : " + todos[idx].quest[questid].a + "</td><td></td><td></td></tr>");
			 }
			 if (todos[idx].quest[questid].b != "")
			 {
				$("#" + idx + "_productTable" + " tbody").append("<tr>" +
				"<td></td><td>B : " + todos[idx].quest[questid].b + "</td><td></td><td></td></tr>");
			 }
			 if (todos[idx].quest[questid].c != "")
			 {
				$("#" + idx + "_productTable" + " tbody").append("<tr>" +
				"<td></td><td>C : " + todos[idx].quest[questid].c + "</td><td></td><td></td></tr>");
			 }
			 if (todos[idx].quest[questid].d != "")
			 {
				$("#" + idx + "_productTable" + " tbody").append("<tr>" +
				"<td></td><td>D : " + todos[idx].quest[questid].d + "</td><td></td><td></td></tr>");
			 }
			 if (todos[idx].quest[questid].e != "")
			 {
				$("#" + idx + "_productTable" + " tbody").append("<tr>" +
				"<td></td><td>E : " + todos[idx].quest[questid].e + "</td><td></td><td></td></tr>");
			 }
		}
		
		var myhtml="";
		if (todos[idx].quest[questid].answereq == true)
			{
				myhtml = myhtml + "<img style='width:16px;' src='../theme/images/icons/check.png'>Answer Required&nbsp;";		
			}
		if (todos[idx].quest[questid].attachreq == true)
			{
				myhtml = myhtml + "<img style='width:16px;' src='../theme/images/icons/check.png'>Attached Required&nbsp;";		
			}
		if (todos[idx].quest[questid].questhint == true)
			{
				myhtml = myhtml + "<img style='width:16px;' src='../theme/images/icons/check.png'>Question Hint&nbsp;";		
			}
		if (todos[idx].quest[questid].notsure == true)
			{
				myhtml = myhtml + "<img style='width:16px;' src='../theme/images/icons/check.png'>Allow Not Sure&nbsp;";		
			}
		if (todos[idx].quest[questid].na == true)
			{
				myhtml = myhtml + "<img style='width:16px;' src='../theme/images/icons/check.png'>Allow Not Applicable&nbsp;";		
			}
		$("#" + idx + "_productTable" + " tbody").append("<tr><td></td><td>" + myhtml + "</td><td></td><td></td></tr>");

	}


	function formClear() 
	{
		$("#idquestion").val("");
		$("#idfriendly").val("");
		$("#iddescription").val("");
		$("#idtype").val("tx");
		$("#idA").val("");
		$("#idB").val("");
		$("#idC").val("");
		$("#idD").val("");
		$("#idE").val("");
		$("#idmultichoice").hide();
		document.getElementById("idanswereq").checked = false;
		document.getElementById("idattachreq").checked = false;
		document.getElementById("idquesthint").checked = false;
		document.getElementById("idnotsure").checked = false;
		document.getElementById("idna").checked = false;
	}


  function showChoice() 
	{
	  $("#idmultichoice").hide();
	  if ($("#idtype").val()=="mc"){$("#idmultichoice").show();}
	}


	function save_template()
	{
		refresh_template();
	}

	function refresh_template()
	{
		let template = JSON.stringify(todos);
		document.getElementById("questionjson").value = template;
		document.getElementById("labelJSON").innerHTML = "Total Character : " + template.length;
	}

	//refresh_template();
	function preview_pdf()
	{
		RefreshTodo();
		print_pdf(true,false);
		var tabStrip = $("#tabstrip").data("kendoTabStrip");
        tabStrip.select(1);
	}
	function send_email()
	{
		RefreshTodo();
		print_pdf(true,true);
	}
	function print_pdf(_file,_email)
	{
		var pageCount;
		const yfactor = 0.3527777778;
		var lMargin=30; //left margin in mm
        var rMargin=15; //right margin in mm
        var pdfInMM=210;  // width of A4 in mm
		var widtharea = pdfInMM-lMargin-rMargin;
        var doc = new jsPDF("p","mm","a4");
		var pos = 20;
		var paragraph;
		var lines;
		var tmpname = document.getElementById("tmpname").value;
		var tmpdesc = document.getElementById("tmpdesc").value;
		var tmpwelcome = document.getElementById("welcome").value;
		var lheight;

			doc.setProperties({
				title: tmpname,
				subject: tmpname + 'Template',
				author: 'privafo',
				keywords: 'dpia, assesment, template',
				creator: 'privafo'
			});

		doc.setFontSize(14)
		doc.text(lMargin, pos, tmpname);
		doc.setFontSize(10)
		pos += 5;
		doc.text(lMargin, pos, tmpdesc);
		pos += 20;
		paragraph = tmpwelcome;
		lines =doc.splitTextToSize(paragraph, widtharea);
		doc.text(lMargin,pos,lines);

		//pos += (lines.length * (doc.getLineHeight(paragraph)*yfactor));

		doc.addPage();
		pos = 20;
		for (var i = 0; i < todos.length; i++) 
		{
			if (i>0)
			{
				doc.setFontSize(11)
				paragraph = todos[i].text;
				lines =doc.splitTextToSize(paragraph, widtharea);
				lheight=(lines.length * (doc.getLineHeight(paragraph)*yfactor))+2;
				doc.setFillColor(105,105,105);
				doc.setTextColor(255,255,255)
				doc.rect(lMargin-10, pos-5, doc.internal.pageSize.width - (lMargin + rMargin) + 10, lheight, 'F');
				doc.text(lMargin,pos,lines);
				paragraph = i + '.';
				doc.text(lMargin-8,pos,paragraph);
				pos += 2;
				pos += lheight;
				doc.setFillColor(255,255,255);
				doc.setTextColor(0,0,0)				
					for (var j = 0; j < todos[i].quest.length; j++)
					{
						if (j>0)
						{
							doc.setFontSize(10)
							paragraph = i + '.' + j + '.';
							doc.text(lMargin-10,pos,paragraph);
							paragraph = todos[i].quest[j].question;
							lines =doc.splitTextToSize(paragraph, widtharea);
							lheight=(lines.length * (doc.getLineHeight(paragraph)*yfactor));
							doc.text(lMargin,pos,lines);
							pos += lheight+2;
								if (todos[i].quest[j].type=='mc')
								{
									if (todos[i].quest[j].a!='')
									{
										paragraph = 'a. ' + todos[i].quest[j].a;
										doc.text(lMargin,pos,paragraph);
										lheight=(lines.length * (doc.getLineHeight(paragraph)*yfactor));
										pos += lheight;
									}
									if (todos[i].quest[j].b!='')
									{
										paragraph = 'b. ' + todos[i].quest[j].b;
										doc.text(lMargin,pos,paragraph);
										lines =doc.splitTextToSize(paragraph, widtharea);
										lheight=(lines.length * (doc.getLineHeight(paragraph)*yfactor));
										pos += lheight;
									}
									if (todos[i].quest[j].c!='')
									{
										paragraph = 'c. ' + todos[i].quest[j].c;
										doc.text(lMargin,pos,paragraph);
										lines =doc.splitTextToSize(paragraph, widtharea);
										lheight=(lines.length * (doc.getLineHeight(paragraph)*yfactor));
										pos += lheight;
									}
									if (todos[i].quest[j].d!='')
									{
										paragraph = 'd. ' + todos[i].quest[j].d;
										doc.text(lMargin,pos,paragraph);
										lines =doc.splitTextToSize(paragraph, widtharea);
										lheight=(lines.length * (doc.getLineHeight(paragraph)*yfactor));
										pos += lheight;
									}
									if (todos[i].quest[j].e!='')
									{
										paragraph = 'e. ' + todos[i].quest[j].e;
										doc.text(lMargin,pos,paragraph);
										lines =doc.splitTextToSize(paragraph, widtharea);
										lheight=(lines.length * (doc.getLineHeight(paragraph)*yfactor));
										pos += lheight;
									}
									pos += 2;
								}
							if 	(todos[i].quest[j].description!='')
								{
									doc.setFontSize(8)
									doc.setFontStyle('italic');
									paragraph = todos[i].quest[j].description;
									lines =doc.splitTextToSize(paragraph, widtharea);
									lheight=(lines.length * (doc.getLineHeight(paragraph)*yfactor))+2;
									doc.setFillColor(245,245,245);
									doc.roundedRect(lMargin, pos-5, doc.internal.pageSize.width - (lMargin + rMargin), lheight +2, 2, 2, 'F');
									doc.text(lMargin+5,pos,lines);
									pos += lheight+1;
									doc.setFontStyle('normal');									
								}
								
	
							var nx=0;									
							if 	(todos[i].quest[j].answereq==true)
								{	
									doc.setFontSize(8)
									doc.setFontStyle('italic');	
									doc.setFillColor(255,217,204);								
									paragraph = "Answer Required";
									doc.roundedRect(lMargin+nx, pos-3, 25, 5, 2, 2, 'F');
									doc.text(lMargin+nx+2,pos,paragraph);
									nx+=27;	
								}	
							if 	(todos[i].quest[j].attachreq==true)
								{	
									doc.setFontSize(8)
									doc.setFontStyle('italic');	
									doc.setFillColor(255,217,204);								
									paragraph = "Attachment Required";
									doc.roundedRect(lMargin+nx, pos-3, 30, 5, 2, 2, 'F');
									doc.text(lMargin+nx+2,pos,paragraph);
									nx+=32;
								}
							if 	(todos[i].quest[j].questhint==true)
								{	
									doc.setFontSize(8)
									doc.setFontStyle('italic');	
									doc.setFillColor(255,217,204);								
									paragraph = "Question Hint";
									doc.roundedRect(lMargin+nx, pos-3, 25, 5, 2, 2, 'F');
									doc.text(lMargin+nx+2,pos,paragraph);
									nx+=27;
								}	
							if 	(todos[i].quest[j].notsure==true)
								{	
									doc.setFontSize(8)
									doc.setFontStyle('italic');	
									doc.setFillColor(255,217,204);								
									paragraph = "Allow Not Sure";
									doc.roundedRect(lMargin+nx, pos-3, 25, 5, 2, 2, 'F');
									doc.text(lMargin+nx+2,pos,paragraph);
									nx+=27;
								}	
							if 	(todos[i].quest[j].na==true)
								{	
									doc.setFontSize(8)
									doc.setFontStyle('italic');	
									doc.setFillColor(255,217,204);								
									paragraph = "Allow Not Applicable";
									doc.roundedRect(lMargin+nx, pos-3, 30, 5, 2, 2, 'F');
									doc.text(lMargin+nx+2,pos,paragraph);
									nx+=32;
								}								
									pos +=5;	
									doc.setFontStyle('normal');									
						}					
					}	
					pos += 10;
			}
		}
		//Page Number
				pageCount = doc.internal.getNumberOfPages()
			    for (var i = 1; i <= pageCount; i++) 
				{
					doc.setPage(i)
					doc.text('Page ' + String(i) + ' of ' + String(pageCount), 
                    doc.internal.pageSize.width - 50,
                    doc.internal.pageSize.height - 10, { align: 'right' }
					)
				}
		//End Page Number
		//doc.save(tmpname.replace(" ","_") + '.pdf');

		if (_file == false)
			{
				doc.autoPrint();  
				doc.output('dataurlnewwindow');
			}
		else
			{
           var filename = tmpname.replace(" ", "_") + '.pdf';
					var binary = doc.output();
                    var reqData = btoa(binary);

						if (_email == true) 
						{
							$.ajax({
								url: "/DPIA/Email",
								data: { data: reqData, myfile:filename , recipient:"cecep.subanda@gmail.com"},
								dataType: "json",
								type: "POST",
							});
						}
						else
						{
							$.ajax({
								url: "/DPIA/Upload",
								data: { data: reqData, myfile:filename },
								dataType: "json",
								type: "POST",
							});
								var pdfViewer = $("#pdfviewer").data("kendoPDFViewer");
								pdfViewer.fromFile('@Url.Content("~/tmp/dpia")' + "/" + filename);
						}
			}
	}
	function onSelect(e) {
        if ($(e.item).find("> .k-link").text()=="Preview")
		   {
						RefreshTodo();
						print_pdf(true,false);
		   }
    }
</script>


